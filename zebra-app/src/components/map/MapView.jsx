import {useEffect,useRef} from 'react'
import {loadKakao} from '../../utils/loadKakao'
export default function MapView({center,marker,onClick}){const ref=useRef(null);const mapRef=useRef(null);const mkRef=useRef(null);useEffect(()=>{loadKakao().then(k=>{const m=new k.maps.Map(ref.current,{center:new k.maps.LatLng(center.lat,center.lng),level:6});mapRef.current=m;if(marker){mkRef.current=new k.maps.Marker({map:m,position:new k.maps.LatLng(marker.lat,marker.lng),clickable:true});m.setLevel(4);m.panTo(new k.maps.LatLng(marker.lat,marker.lng))}k.maps.event.addListener(m,'click',e=>onClick&&onClick({lat:e.latLng.getLat(),lng:e.latLng.getLng()}))});return()=>mkRef.current&&mkRef.current.setMap(null)},[]);useEffect(()=>{if(!mapRef.current||!center)return;const k=window.kakao;mapRef.current.setCenter(new k.maps.LatLng(center.lat,center.lng))},[center]);useEffect(()=>{if(!mapRef.current||!marker)return;const k=window.kakao;if(mkRef.current)mkRef.current.setMap(null);mkRef.current=new k.maps.Marker({map:mapRef.current,position:new k.maps.LatLng(marker.lat,marker.lng)});mapRef.current.setLevel(4);mapRef.current.panTo(new k.maps.LatLng(marker.lat,marker.lng))},[marker]);return <div className='map' ref={ref}/>}
